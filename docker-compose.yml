# Upfirst - Local Development Environment
# Run: docker-compose up
# Stop: docker-compose down
# Reset: docker-compose down -v (deletes database)

version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: upfirst-postgres-local
    restart: unless-stopped
    environment:
      POSTGRES_USER: upfirst
      POSTGRES_PASSWORD: upfirst_dev_password
      POSTGRES_DB: upfirst
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U upfirst"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - upfirst-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: upfirst-app-local
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://upfirst:upfirst_dev_password@postgres:5432/upfirst
      PORT: 5000
      SESSION_SECRET: local_dev_session_secret_change_in_production
      # Add your API keys here or use .env file
      # STRIPE_SECRET_KEY: sk_test_...
      # RESEND_API_KEY: re_...
      # GEMINI_API_KEY: ...
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Mount source code for hot reload
      - ./server:/app/server
      - ./client:/app/client
      - ./shared:/app/shared
      - ./prisma:/app/prisma
      # Persist node_modules
      - node_modules:/app/node_modules
      - prisma_generated:/app/generated
    command: sh -c "npx prisma db push --force-reset && npm run dev"
    networks:
      - upfirst-network

volumes:
  postgres_data:
    driver: local
  node_modules:
    driver: local
  prisma_generated:
    driver: local

networks:
  upfirst-network:
    driver: bridge
